From 2bebb828a1eec31d069d24c877faa432411d805f Mon Sep 17 00:00:00 2001
From: Minmin Gong <gongminmin@msn.com>
Date: Sat, 7 Jul 2018 19:35:24 -0700
Subject: [PATCH 1/3] Support UWP

1. UWP detection.
2. Fix some compiling problems on UWP configuration.
---
 C/7zWindows.h                             | 20 ++++++++++++++++++++
 CPP/7zip/Archive/Common/ItemNameUtils.cpp |  2 +-
 CPP/Common/MyString.cpp                   |  2 +-
 CPP/Common/MyString.h                     |  4 ++--
 CPP/Windows/System.cpp                    |  2 +-
 5 files changed, 25 insertions(+), 5 deletions(-)

diff --git a/C/7zWindows.h b/C/7zWindows.h
index 42c6db8b..9531e9b5 100755
--- a/C/7zWindows.h
+++ b/C/7zWindows.h
@@ -27,6 +27,26 @@
 #define RPC_NO_WINDOWS_H
 #endif
 
+#if defined(__MINGW32__)
+#  include <_mingw.h>
+#  ifndef WINVER
+#    define WINVER 0x0603
+#  endif
+#else
+#  include <sdkddkver.h>
+#endif
+
+#if (_WIN32_WINNT >= 0x0A00 /*_WIN32_WINNT_WIN10*/)
+#  include <winapifamily.h>
+#  if WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP
+#    define IS_WINDOWS_DESKTOP
+#  else
+#    define IS_WINDOWS_STORE
+#  endif
+#else
+#  define IS_WINDOWS_DESKTOP
+#endif
+
 #if defined(__MINGW32__) || defined(__MINGW64__)
 // #if defined(__GNUC__) && !defined(__clang__)
 #include <windows.h>
diff --git a/CPP/7zip/Archive/Common/ItemNameUtils.cpp b/CPP/7zip/Archive/Common/ItemNameUtils.cpp
index 8caf1d14..1d2d32c8 100755
--- a/CPP/7zip/Archive/Common/ItemNameUtils.cpp
+++ b/CPP/7zip/Archive/Common/ItemNameUtils.cpp
@@ -111,7 +111,7 @@ bool HasTailSlash(const AString &name, UINT
   if (name.IsEmpty())
     return false;
   char c;
-    #if defined(_WIN32) && !defined(UNDER_CE)
+    #if defined(_WIN32) && !defined(UNDER_CE) && !defined(IS_WINDOWS_STORE)
     if (codePage != CP_UTF8)
       c = *CharPrevExA((WORD)codePage, name, name.Ptr(name.Len()), 0);
     else
diff --git a/CPP/Common/MyString.cpp b/CPP/Common/MyString.cpp
index 51c1c3be..ba43f784 100755
--- a/CPP/Common/MyString.cpp
+++ b/CPP/Common/MyString.cpp
@@ -1745,7 +1745,7 @@ int MyStringCompareNoCase(const char *s1, const char *s2)
 
 static inline UINT GetCurrentCodePage()
 {
-  #if defined(UNDER_CE) || !defined(_WIN32)
+  #if defined(UNDER_CE) || defined(IS_WINDOWS_STORE) || !defined(_WIN32)
   return CP_ACP;
   #else
   return ::AreFileApisANSI() ? CP_ACP : CP_OEMCP;
diff --git a/CPP/Common/MyString.h b/CPP/Common/MyString.h
index e5ce18ae..d9efebdc 100755
--- a/CPP/Common/MyString.h
+++ b/CPP/Common/MyString.h
@@ -173,7 +173,7 @@ inline wchar_t MyCharUpper(wchar_t c) throw()
   if (c < 'a') return c;
   if (c <= 'z') return (wchar_t)(c - 0x20);
   if (c <= 0x7F) return c;
-  #ifdef _WIN32
+  #ifdef IS_WINDOWS_DESKTOP
     #ifdef _UNICODE
       return (wchar_t)(unsigned)(UINT_PTR)CharUpperW((LPWSTR)(UINT_PTR)(unsigned)c);
     #else
@@ -192,7 +192,7 @@ inline wchar_t MyCharLower(wchar_t c) throw()
   if (c < 'A') return c;
   if (c <= 'Z') return (wchar_t)(c + 0x20);
   if (c <= 0x7F) return c;
-  #ifdef _WIN32
+  #ifdef IS_WINDOWS_DESKTOP
     #ifdef _UNICODE
       return (wchar_t)(unsigned)(UINT_PTR)CharLowerW((LPWSTR)(UINT_PTR)(unsigned)c);
     #else
diff --git a/CPP/Windows/System.cpp b/CPP/Windows/System.cpp
index dbe287a0..a679c7b6 100755
--- a/CPP/Windows/System.cpp
+++ b/CPP/Windows/System.cpp
@@ -147,7 +147,7 @@ bool GetRamSize(UInt64 &size)
     stat.dwLength = sizeof(stat);
   #endif
   
-  #ifdef _WIN64
+  #if defined(_WIN64) || defined(_M_ARM) || defined(_M_ARM64)
     
     if (!::GlobalMemoryStatusEx(&stat))
       return false;
-- 
2.43.0.windows.1

